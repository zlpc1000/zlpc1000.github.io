// Exemplos de uso da API DarkPaste
// Execute com: node examples/api-usage.js

const BASE_URL = 'https://seu-projeto.vercel.app'; // Substitua pela sua URL

// Fun√ß√£o para fazer requisi√ß√µes
async function makeRequest(endpoint, method = 'GET', data = null) {
  const url = `${BASE_URL}${endpoint}`;
  const options = {
    method,
    headers: {
      'Content-Type': 'application/json',
    },
  };

  if (data) {
    options.body = JSON.stringify(data);
  }

  try {
    const response = await fetch(url, options);
    const result = await response.json();
    return result;
  } catch (error) {
    console.error('Erro na requisi√ß√£o:', error);
    return null;
  }
}

// Exemplo 1: Enviar email an√¥nimo
async function sendAnonymousEmail() {
  console.log('üìß Enviando email an√¥nimo...');
  
  const emailData = {
    to: 'destinatario@exemplo.com',
    subject: 'Teste do DarkPaste',
    body: 'Este √© um email de teste enviado atrav√©s do DarkPaste - sistema totalmente an√¥nimo e privado.',
    from: 'remetente@exemplo.com' // Opcional, ser√° anonimizado
  };

  const result = await makeRequest('/api/send', 'POST', emailData);
  
  if (result && result.success) {
    console.log('‚úÖ Email enviado com sucesso!');
    console.log(`ID An√¥nimo: ${result.anonymousId}`);
    console.log(`Timestamp: ${new Date(result.timestamp)}`);
  } else {
    console.log('‚ùå Erro ao enviar email:', result?.error);
  }
}

// Exemplo 2: Verificar estat√≠sticas
async function getStats() {
  console.log('üìä Obtendo estat√≠sticas...');
  
  const result = await makeRequest('/api/stats');
  
  if (result && result.success) {
    console.log('‚úÖ Estat√≠sticas obtidas:');
    console.log(`Total de emails: ${result.stats.totalEmails}`);
    console.log(`Emails ativos: ${result.stats.activeEmails}`);
    console.log(`Uptime: ${result.stats.uptime} segundos`);
    console.log(`Vers√£o: ${result.stats.version}`);
  } else {
    console.log('‚ùå Erro ao obter estat√≠sticas:', result?.error);
  }
}

// Exemplo 3: Verificar sa√∫de do sistema
async function checkHealth() {
  console.log('üè• Verificando sa√∫de do sistema...');
  
  const result = await makeRequest('/api/health');
  
  if (result && result.success) {
    console.log('‚úÖ Sistema operacional:');
    console.log(`Status: ${result.status}`);
    console.log(`Modo escuro: ${result.darkMode}`);
    console.log(`Privacidade: ${result.privacy}`);
    console.log(`Email configurado: ${result.emailConfigured}`);
  } else {
    console.log('‚ùå Erro ao verificar sa√∫de:', result?.error);
  }
}

// Exemplo 4: Enviar email com dados sens√≠veis (criptografado)
async function sendSensitiveEmail() {
  console.log('üîí Enviando email sens√≠vel...');
  
  const sensitiveData = {
    to: 'admin@empresa.com',
    subject: 'Relat√≥rio Confidencial',
    body: `
      Dados confidenciais:
      - Usu√°rio: Jo√£o Silva
      - CPF: 123.456.789-00
      - Sal√°rio: R$ 15.000,00
      - Departamento: TI
      
      Este email √© totalmente criptografado e an√¥nimo.
    `
  };

  const result = await makeRequest('/api/send', 'POST', sensitiveData);
  
  if (result && result.success) {
    console.log('‚úÖ Email sens√≠vel enviado com seguran√ßa!');
    console.log(`ID An√¥nimo: ${result.anonymousId}`);
    console.log('üîê Dados criptografados com AES-256');
  } else {
    console.log('‚ùå Erro ao enviar email sens√≠vel:', result?.error);
  }
}

// Exemplo 5: Teste de stress (m√∫ltiplos emails)
async function stressTest() {
  console.log('‚ö° Iniciando teste de stress...');
  
  const emails = [];
  for (let i = 0; i < 5; i++) {
    emails.push({
      to: `teste${i}@exemplo.com`,
      subject: `Teste ${i + 1}`,
      body: `Este √© o teste n√∫mero ${i + 1} do DarkPaste.`
    });
  }

  const promises = emails.map(email => makeRequest('/api/send', 'POST', email));
  const results = await Promise.all(promises);
  
  const successCount = results.filter(r => r && r.success).length;
  console.log(`‚úÖ ${successCount}/${emails.length} emails enviados com sucesso`);
}

// Fun√ß√£o principal
async function main() {
  console.log('üîí DarkPaste - Exemplos de Uso da API\n');
  
  // Verificar sa√∫de primeiro
  await checkHealth();
  console.log('');
  
  // Obter estat√≠sticas
  await getStats();
  console.log('');
  
  // Enviar email simples
  await sendAnonymousEmail();
  console.log('');
  
  // Enviar email sens√≠vel
  await sendSensitiveEmail();
  console.log('');
  
  // Teste de stress
  await stressTest();
  console.log('');
  
  // Estat√≠sticas finais
  await getStats();
  
  console.log('\nüéâ Todos os exemplos executados!');
}

// Executar se chamado diretamente
if (require.main === module) {
  main().catch(console.error);
}

module.exports = {
  sendAnonymousEmail,
  getStats,
  checkHealth,
  sendSensitiveEmail,
  stressTest
};
